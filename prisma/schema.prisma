generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id(map: "user_pkey") @default(uuid())
  email     String?     @unique
  fullName  String
  phone     String?
  createdAt DateTime    @default(now()) @db.Timestamp(6)
  updatedAt DateTime    @default(now()) @updatedAt @db.Timestamp(6)
  isAdmin   Boolean     @default(false)
  cart      Cart?
  favorites Favorites[]
}

model Category {
  id            Int           @id(map: "category_pkey") @default(autoincrement())
  name          String
  createdAt     DateTime      @default(now()) @db.Timestamp(6)
  updatedAt     DateTime      @updatedAt @db.Timestamp(6)
  color         String
  image         String
  products      Product[]
  subCategories SubCategory[]
}

model SubCategory {
  id         Int      @id(map: "subcategory_pkey") @default(autoincrement())
  name       String
  categoryId Int
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @updatedAt @db.Timestamp(6)
  category   Category @relation(fields: [categoryId], references: [id], map: "subcategory_categoryid_fkey")
}

model Product {
  id              Int             @id(map: "product_pkey") @default(autoincrement())
  name            String
  image           String
  quantityPerUnit Int
  unit            String
  linkCarulla     String?
  linkExito       String?
  linkJumbo       String?
  linkOlimpica    String?
  createdAt       DateTime        @default(now()) @db.Timestamp(6)
  updatedAt       DateTime        @updatedAt @db.Timestamp(6)
  offerCarulla    Int?
  offerExito      Int?
  offerJumbo      Int?
  offerOlimpica   Int?
  CategoryId      Int?
  favorites       Favorites[]
  productCategory Category?       @relation(fields: [CategoryId], references: [id], map: "product_categoryid_fkey")
  productPrices2  ProductPrice2[]
}

model ProductPrice2 {
  id            Int      @id(map: "productprice2_pkey") @default(autoincrement())
  productId     Int
  priceExito    Int?
  priceOlimpica Int?
  priceJumbo    Int?
  priceCarulla  Int?
  createdAt     DateTime @default(now()) @db.Timestamp(6)
  updatedAt     DateTime @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @updatedAt @db.Timestamp(6)
  proudct       Product  @relation(fields: [productId], references: [id], map: "productprice2_productid_fkey")
}

model Cart {
  id        Int      @id(map: "cart_pkey") @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
  userEmail String?  @unique
  user      User?    @relation(fields: [userEmail], references: [email], map: "cart_useremail_fkey")
}

model Subscription {
  id        Int      @id(map: "subscription_pkey") @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
}

model Favorites {
  userId    String
  productId Int
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
  product   Product  @relation(fields: [productId], references: [id], map: "favorites_productid_fkey")
  user      User     @relation(fields: [userId], references: [id], map: "favorites_userid_fkey")

  @@id([userId, productId], map: "favorites_pkey")
}

model Offer {
  id        Int      @id(map: "offer_pkey") @default(autoincrement())
  title     String
  content   String
  image     String
  link      String
  size      Int
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
}
